@page "/"
@using Microsoft.FluentUI.AspNetCore.Components
<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?"/>

<h2>FluentDataGrid</h2>

<FluentDataGrid TGridItem="Person" Items="Items2.AsQueryable()">
    <PropertyColumn Property="arg => arg.Name"></PropertyColumn>
    <TemplateColumn Title="hahaha">
        xxxxxxx
    </TemplateColumn>
</FluentDataGrid>

<h2>FluentAbpDataGrid with PropertyColumn</h2>
<FluentAbpDataGrid TGridItem="Person" Items="Items2">
    <DataGridColumns>
        <PropertyColumn TGridItem="Person" TProp="string" Property="arg => arg.Name"></PropertyColumn>
        <TemplateColumn TGridItem="Person" Title="hahaha">
            xxxxxxx
        </TemplateColumn>
    </DataGridColumns>
</FluentAbpDataGrid>

<h2>FluentAbpDataGrid</h2>
<FluentAbpDataGrid TGridItem="Person" Items="Items2">
    <DataGridColumns>
        <FluentAbpDataGridPropertyColumn TGridItem="Person" TProp="string" Property="@(c => c.Name)"></FluentAbpDataGridPropertyColumn>
        <FluentAbpDataGridTemplateColumn TGridItem="Person" Title="xxxx">
            template: @context.Name
        </FluentAbpDataGridTemplateColumn>
    </DataGridColumns>
</FluentAbpDataGrid>


@code {

    int TotalItemsCount;
    List<Person> Items = new List<Person>();

    List<Person> Items2 = new List<Person>()
    {
        new Person() {Name = "John"}
    };


    public class Person
    {
        public string Name { get; set; }
    }


    private static ValueTask<AbpItemsProviderResult<Person>> ItemsProvider2(AbpItemsProviderRequest<Person> request)
    {
        return ValueTask.FromResult(new AbpItemsProviderResult<Person>()
        {
            Items = new List<Person>()
            {
                new Person() {Name = "Tom"},
                new Person() {Name = "John"}
            },
            TotalCount = 2
        });
    }

}